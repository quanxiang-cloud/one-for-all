parser: '@typescript-eslint/parser'
extends:
  - google
  - 'plugin:react/recommended'
  - 'eslint:recommended'
  - 'plugin:@typescript-eslint/recommended'
plugins:
  - react
  - '@typescript-eslint'
  - unused-imports
env:
  browser: true
  es2021: true
globals:
  window: true
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 12
  sourceType: module
rules:
  '@typescript-eslint/camelcase': 'off'
  '@typescript-eslint/explicit-function-return-type':
    - error
    - allowExpressions: true
      allowTypedFunctionExpressions: true
      allowHigherOrderFunctions: true
      allowDirectConstAssertionInArrowFunctions: true
      allowConciseArrowFunctionExpressionsStartingWithVoid: false
  '@typescript-eslint/explicit-module-boundary-types':
    - warn
    - allowArgumentsExplicitlyTypedAsAny: true
      allowDirectConstAssertionInArrowFunctions: true
      allowedNames: []
      allowHigherOrderFunctions: true
      allowTypedFunctionExpressions: true
  '@typescript-eslint/no-explicit-any': 'warn'
  '@typescript-eslint/no-invalid-this':
    - error
  '@typescript-eslint/no-unused-vars':
    - error
    - varsIgnorePattern: _
  camelcase: 'off'
  arrow-parens:
    - error
    - always
  indent:
    - error
    - 2
  max-len:
    - 1
    - code: 110
      ignoreComments: true
      ignorePattern: >-
        ^(\s*[a-zA-Z_]+:
        '[^']+'[,;]*)|(.*interpolate.*)|(.*require.*)|(.*_\.template.*)|(<svg
        .*)|(<rect .*)|(<polygon .*)$
      ignoreRegExpLiterals: true
      ignoreTrailingComments: true
      ignoreUrls: true
      tabWidth: 2
  no-console: warn
  no-invalid-this: 'off'
  no-mixed-operators: error
  no-multiple-empty-lines:
    - warn
    - max: 1
  no-nested-ternary: error
  no-param-reassign: error
  no-plusplus: error
  object-curly-spacing:
    - warn
    - always
  quote-props:
    - error
    - as-needed
  quotes:
    - error
    - single
  radix:
    - 1
    - as-needed
  react/display-name: 'off'
  react/jsx-wrap-multilines:
    - warn
    - arrow: parens
      assignment: parens
      condition: parens
      declaration: parens
      logical: parens
      prop: parens
      return: parens
  require-jsdoc: 'off'
  semi:
    - error
    - always
  space-infix-ops:
    - error
    - int32Hint: false
  #  unused-imports/no-unused-imports: error
  unused-imports/no-unused-vars:
    - error
    - args: after-used
      argsIgnorePattern: ^_
      vars: all
      varsIgnorePattern: ^_
settings:
  react:
    version: detect
